body[data-isjson="yes"] {
    color: #2b2b2b;
    font-display: swap;
    font-family: 'MonoLisa', monospace;
    font-size: 11.5px;
    line-height: 16px;
}

body[data-view="raw"] {
    margin-top: 50px;
}

body[data-isjson="yes"] > div {
    padding: 5px 10px;
}

body[data-isjson="yes"] span, .string {
    display: inline-block;
}

.k {
    color: #b16b2a;
}

.string {
    color: green;
}

.number {
    color: darkblue;
}

.boolean.false {
    color: red;
}
.boolean.true {
    color: green;
}

.null {
    color: magenta;
}

.collapsible {
    cursor: pointer;
    display: inline-block;
}

.content {
    display: block;
    margin-left: 21px;
    padding-left: 15px;
    border-left: 1px dotted #dedede;
}

.content > div {
    line-height: 18px;
}

.ellipsis {
    display: none;
}

.arrow-right .ellipsis {
    display: inline-block;
}

.arrow-right svg, .arrow-down svg {
    float: left;
}

.arrow-right path, .arrow-down path {
    fill: #e1e1e1;
}

.placeholder-arrow {
    display: inline-block;
    width: 15px;
    height: 15px;
}

.arrow-down svg {
    transform: rotate(90deg);
}

.kvp {
    display: block;
}

.kvr {
    display: flex;
    flex-wrap: wrap;
    align-items: flex-start;
}

.k, .c {
    white-space: nowrap;
}

.c {
    margin-right: 5px;
}

.v {
    flex-grow: 1;
    margin-left: 0;
    word-wrap: break-word;
}

body[data-isjson="yes"] button {
    border-radius: 3px;
    padding: 4px 8px 3px;
    font-weight: 600;
    font-family: 'MonoLisa';
    position: fixed;
    right: 15px;
    top: 13px;
    border: none;
    cursor: pointer;
    transition: background-color 0.3s;
    height: 28px;
    width: 140px;
}

body[data-isjson="yes"] button::before {
    content: "";
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    display: flex;
    align-items: center;
    justify-content: center;
}

body[data-view="formatted"] button {
    background-color: #4CAF50;
    color: white;
}

body[data-view="formatted"] button::before {
    content: "Formatted JSON";
}

body[data-view="raw"] button {
    background-color: #ededed;
    color: #6a6a6a;
}

body[data-view="raw"] button::before {
    content: "Raw JSON";
}

body[data-isjson="yes"] > div:nth-child(1) > span.collapsible > span.opening, span.closing {
    display: inline-block;
}

span.closing {
    padding-left: 19px;
}
span.empty {
	padding-left: 17px;
}

body[data-isjson="yes"] .content[style*="display: none"] + .closing {
    padding-left: 0;
}

body[data-isjson="yes"] .content[style*="display: none"] + .closing:before {
    content: '...';
    position: relative;
}

.item-count::before {
    content: "// " attr(count);
    color: #888;
    font-style: italic;
    display: none;
}

body[data-isjson="yes"] .content[style*="display: none"] + .closing + .item-count::before {
    display: inline;
    padding-left: 5px;
}

.color-preview {
    display: inline-block;
	border-radius: 15px;
    width: 10px;
    height: 10px;
    border: 1px solid #e1e1e1;
    margin-right: 2px;
    vertical-align: middle;
}

.timestamp::after {
    content: " /* " attr(data-timestamp-comment) " */ ";
    color: #888;
    font-style: italic;
	margin-left: 3px;
	margin-right: 3px;
}

.jsonLintIcon {
    cursor: pointer;
    position: fixed;
    right: 165px; /* Adjust this value based on the width of the existing button and desired spacing */
    top: 13px;
    fill: #6b6b6b; /* Color of the icon when in formatted view */
    transition: fill 0.3s;
	border: 1px solid #cdcdcd;
    border-radius: 3px;
    padding: 3px 4px;
}

body[data-view="raw"] .jsonLintIcon {
    fill: #6a6a6a; /* Color of the icon when in raw view */
}

.jsonLintIcon:hover {
    fill: #3a3a3a; /* Darker shade for hover effect */
}

.image-wrapper {
    position: relative;
    display: inline-block;
    cursor: pointer;
}

.image-wrapper img {
    position: absolute;
    top: 100%;
    left: 50%;
    transform: translateX(-50%);
    max-width: 200px;
    max-height: 200px;
	padding: 8px;
    border: 1px solid #ccc;
    border-radius: 4px;
    z-index: 10;
    opacity: 0;
    pointer-events: none; /* Makes sure it doesn't interfere with other interactions */
    transition: opacity 0.3s ease; /* Smooth fade-in effect */

    background-color: #dadada;
    background-image:
        linear-gradient(45deg, #fff 25%, transparent 25%, transparent 75%, #fff 75%, #fff),
        linear-gradient(45deg, #fff 25%, transparent 25%, transparent 75%, #fff 75%, #fff);
    background-size: 20px 20px;
    background-position: 0 0, 10px 10px;
}

.image-wrapper:hover img {
    opacity: 1; /* Show on hover */
}

@media (prefers-color-scheme: dark) {
    body[data-isjson="yes"] {
        color: #e1e1e1;
        background-color: #2b2b2b;
    }

    .k {
        color: #ffb86c;
    }

    .string {
        color: #50fa7b;
    }

    .number {
        color: #8be9fd;
    }

    .boolean {
        color: #ff79c6;
    }

    .null {
        color: #bd93f9;
    }

    .content {
        border-left: 1px dotted #555;
    }

    .arrow-right path, .arrow-down path {
        fill: #888;
    }

    body[data-view="formatted"] button {
        background-color: #6272a4;
        color: #f8f8f2;
    }

    body[data-view="raw"] button {
        background-color: #44475a;
        color: #f8f8f2;
    }

    .item-count::before {
        color: #666;
    }
}